{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputValue","state","setState","todoArr","todo","setTodo","show","map","x","i","className","type","value","onChange","e","target","onKeyDown","key","arr","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OA8CeA,MA3Cf,WACA,MAAyBC,mBAAS,CAChCC,WAAW,KADb,mBAAOC,EAAP,KAAaC,EAAb,KAIA,EAAwBH,mBAAS,CAC/BI,QAAQ,KADV,mBAAOC,EAAP,KAAYC,EAAZ,KAoBIC,EAAOF,EAAKD,QAAQI,KAAI,SAACC,EAAEC,GAC7B,OAAQ,mBAAGC,UAAU,IAAb,SAA0BF,GAAJC,MAGhC,OAEI,sBAAKC,UAAU,MAAf,UACQ,sCACA,uBAAOC,KAAK,OACXC,MAAOX,EAAMD,WACba,SAdE,SAACC,GACbZ,EAAS,CAACF,WAAWc,EAAEC,OAAOH,SAcpBI,UA1Be,SAACF,GAC3B,GAAa,UAAVA,EAAEG,IAAgB,CACpB,IAAIC,EAAG,YAAOd,EAAKD,SACnBe,EAAIC,KAAKlB,EAAMD,YACfK,EAAQ,CAACF,QAAQe,IACjBhB,EAAS,CAACF,WAAW,SAsBZM,MC5BGc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.40f3c3df.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nfunction App() {\nconst [state,setState] = useState({\n  inputValue:''\n})\n\nconst [todo,setTodo]  = useState({\n  todoArr:[]\n})\n\n\nconst valueStoreAndChange = (e) =>{\n  if(e.key === 'Enter'){ \n   let arr = [...todo.todoArr]\n   arr.push(state.inputValue)\n   setTodo({todoArr:arr})\n   setState({inputValue:''})\n  }\n}\n\n\n\nconst change = (e) =>{\n   setState({inputValue:e.target.value}) \n}\n\nlet show = todo.todoArr.map((x,i) => {\n  return (<p className='P' key={i}>{x}</p>)\n})\n\nreturn (\n\n    <div className=\"App\">\n            <h2>Todo</h2>\n            <input type='text'\n             value={state.inputValue}\n             onChange={change}\n             onKeyDown={valueStoreAndChange}/>\n           {show}\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}